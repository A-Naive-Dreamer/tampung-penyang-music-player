package musicplayer;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.net.URLDecoder;
import javax.imageio.ImageIO;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.Timer;

/**
 *
 * @author Atallabela Yosua
 */
public class Player extends javax.swing.JFrame {
    private final URL PATH_1 = this.getClass().getResource("/logo.png");
    
    private static AudioFormat format;
    private static AudioInputStream sound;
    private static BufferedImage logo;
    private static Clip audioClip;
    private static DataLine.Info info;
    private static File selectedFile;
    private static int[] length = new int[4];
    private static String path2;
    private static String[] description = new String[2];
    private static Timer duration;

    private static final GraphicsDevice MONITOR = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
    private static final FileNameExtensionFilter EXT = new FileNameExtensionFilter("WAV Audio Only", "wav");
    private static final int SCREEN_WIDTH = Player.MONITOR.getDisplayMode().getWidth();
    private static final int SCREEN_HEIGHT = Player.MONITOR.getDisplayMode().getHeight();

    /**
     * Creates new form MusicPlalyer
     */
    public Player() {
        this.initComponents();

        this.setLocation(new Point(((Player.SCREEN_WIDTH - 981) / 2), ((Player.SCREEN_HEIGHT - 181) / 2)));

        this.fileManager.setVisible(false);
        this.fileManager.setFileFilter(Player.EXT);
        
        try {
            Player.path2 = URLDecoder.decode(this.PATH_1.getPath(), "ASCII");
            Player.logo = ImageIO.read(new File(Player.path2));
        } catch(IOException err) {
            System.out.println(err);
        }
        
        this.logo1Label.setIcon(new ImageIcon(Player.logo));
        this.logo2Label.setIcon(new ImageIcon(Player.logo));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileManager = new javax.swing.JFileChooser();
        panel1 = new javax.swing.JPanel();
        backwardButton = new javax.swing.JButton();
        playOrPauseButton = new javax.swing.JButton();
        forwardButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        lengthLabel = new javax.swing.JLabel();
        warningLabel1 = new javax.swing.JLabel();
        warningLabel2 = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();
        logo1Label = new javax.swing.JLabel();
        fileButton = new javax.swing.JButton();
        panel3 = new javax.swing.JPanel();
        logo2Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tampung Penyang Music Player");
        setBackground(new java.awt.Color(75, 75, 75));
        setForeground(new java.awt.Color(75, 75, 75));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(50, 50, 125));
        panel1.setPreferredSize(new java.awt.Dimension(1008, 161));

        backwardButton.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        backwardButton.setForeground(new java.awt.Color(75, 240, 75));
        backwardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/backward-arrows-couple-pointing-to-left.png"))); // NOI18N
        backwardButton.setText("Backward");
        backwardButton.setOpaque(false);
        backwardButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backwardButtonMouseClicked(evt);
            }
        });

        playOrPauseButton.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        playOrPauseButton.setForeground(new java.awt.Color(75, 240, 75));
        playOrPauseButton.setIcon(new javax.swing.ImageIcon("E:\\Download II\\portable_apps\\play-button.png")); // NOI18N
        playOrPauseButton.setText("Play/Pause");
        playOrPauseButton.setOpaque(false);
        playOrPauseButton.setPreferredSize(new java.awt.Dimension(161, 32));
        playOrPauseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playOrPauseButtonMouseClicked(evt);
            }
        });

        forwardButton.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        forwardButton.setForeground(new java.awt.Color(75, 240, 75));
        forwardButton.setIcon(new javax.swing.ImageIcon("E:\\Download II\\portable_apps\\fast-forward-media-control-button.png")); // NOI18N
        forwardButton.setText("Forward");
        forwardButton.setOpaque(false);
        forwardButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                forwardButtonMouseClicked(evt);
            }
        });

        stopButton.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        stopButton.setForeground(new java.awt.Color(75, 240, 75));
        stopButton.setIcon(new javax.swing.ImageIcon("E:\\Download II\\portable_apps\\video-player-stop-button.png")); // NOI18N
        stopButton.setText("Stop");
        stopButton.setOpaque(false);
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopButtonMouseClicked(evt);
            }
        });

        lengthLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        lengthLabel.setForeground(new java.awt.Color(240, 75, 240));
        lengthLabel.setText("Length: 0:0 Minutes");

        warningLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        warningLabel1.setForeground(new java.awt.Color(240, 75, 75));
        warningLabel1.setText("This music player just can play audio files with \".wav\" extension");

        warningLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        warningLabel2.setForeground(new java.awt.Color(240, 75, 75));
        warningLabel2.setText("Please wait till audio begin to play");

        panel2.setBackground(new java.awt.Color(50, 50, 125));
        panel2.setMinimumSize(new java.awt.Dimension(132, 132));
        panel2.setPreferredSize(new java.awt.Dimension(132, 132));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addComponent(logo1Label)
                .addGap(0, 132, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addComponent(logo1Label)
                .addGap(0, 132, Short.MAX_VALUE))
        );

        fileButton.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        fileButton.setForeground(new java.awt.Color(75, 240, 75));
        fileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/list-of-files.png"))); // NOI18N
        fileButton.setText("File");
        fileButton.setOpaque(false);
        fileButton.setPreferredSize(new java.awt.Dimension(32, 32));
        fileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileButtonMouseClicked(evt);
            }
        });
        fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileButtonActionPerformed(evt);
            }
        });

        panel3.setBackground(new java.awt.Color(50, 50, 125));
        panel3.setMinimumSize(new java.awt.Dimension(132, 132));

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addComponent(logo2Label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addComponent(logo2Label)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lengthLabel)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(fileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(backwardButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(playOrPauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(forwardButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopButton))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(warningLabel1))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(warningLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(lengthLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(forwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backwardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(playOrPauseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(warningLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(381, 381, 381))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 981, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    private void backwardButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backwardButtonMouseClicked
        if(Player.audioClip != null && Player.audioClip.isRunning() && (Player.audioClip.getMicrosecondPosition() - 4000000) >= 1000000) {
            int currentPosition = (int) Player.audioClip.getMicrosecondPosition();

            currentPosition -= 4000000;

            Player.audioClip.stop();

            if(currentPosition < Player.audioClip.getMicrosecondLength()) {
                Player.audioClip.setMicrosecondPosition(currentPosition);
            }

            Player.audioClip.start();
        }
    }//GEN-LAST:event_backwardButtonMouseClicked

    private void stopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseClicked
        if(Player.audioClip != null && Player.audioClip.isOpen()) {
            Player.audioClip.stop();
            Player.audioClip.close();

            this.lengthLabel.setText("Length: 0:0 Minutes");
        }
    }//GEN-LAST:event_stopButtonMouseClicked

    private void forwardButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forwardButtonMouseClicked
        if(Player.audioClip != null && Player.audioClip.isRunning() && (Player.audioClip.getMicrosecondPosition() + 4000000) < (Player.audioClip.getMicrosecondLength() - 1000000)) {
            int currentPosition = (int) Player.audioClip.getMicrosecondPosition();

            currentPosition += 4000000;

            Player.audioClip.stop();

            if(currentPosition < Player.audioClip.getMicrosecondLength()) {
                Player.audioClip.setMicrosecondPosition(currentPosition);
            }

            Player.audioClip.start();
        }
    }//GEN-LAST:event_forwardButtonMouseClicked

    private void fileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileButtonMouseClicked
        int result = 0;

        this.fileManager.setVisible(true);

        result = this.fileManager.showOpenDialog(this.panel1);

        if(result == JFileChooser.APPROVE_OPTION) {
            Player.selectedFile = this.fileManager.getSelectedFile();
        }

        try {
            if(Player.audioClip != null && Player.audioClip.isRunning()) {
                Player.audioClip.stop();
            }

            Player.sound = AudioSystem.getAudioInputStream(Player.selectedFile);
            Player.format = Player.sound.getFormat();

            Player.info = new DataLine.Info(Clip.class, Player.format);
            Player.audioClip = (Clip) AudioSystem.getLine(Player.info);

            Player.audioClip.open(Player.sound);
            Player.audioClip.start();

            if (Player.audioClip.getMicrosecondLength() < 2000000) {
                Player.description[0] = "0:1";
            } else {
                if (Player.audioClip.getMicrosecondLength() < 60000000) {
                    Player.length[0] = Math.round(Player.audioClip.getMicrosecondLength() / 1000000);

                    Player.description[0] = "0:" + Integer.toString(Player.length[0]);
                } else {
                    Player.length[0] = Math.round(Player.audioClip.getMicrosecondLength() / 60000000);
                    Player.length[1] = Math.round(Player.audioClip.getMicrosecondLength() % 60000000) / 1000000;

                    Player.description[0] = Integer.toString(Player.length[0]) + ":" + Integer.toString(Player.length[1]);
                }
            }

            this.lengthLabel.setText("Length: " + Player.description[0] + " Minutes");

            Player.duration = new Timer(1000, new ActionListener() {
                public void actionPerformed(ActionEvent event) {
                    Player.setDuration();
                    
                    lengthLabel.setText("Length: " + Player.description[1] + Player.description[0] + " Minutes");
                }
            });
            Player.duration.start();
        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException err) {
            System.out.println(err);
        }
    }//GEN-LAST:event_fileButtonMouseClicked

    private void playOrPauseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playOrPauseButtonMouseClicked
        if(Player.audioClip != null && Player.audioClip.isRunning()) {
            Player.audioClip.stop();
        } else {
            Player.audioClip.start();
        }
    }//GEN-LAST:event_playOrPauseButtonMouseClicked

    private void fileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileButtonActionPerformed

    private static void setDuration() {
        if(Player.audioClip != null && Player.audioClip.isRunning() && Player.audioClip.getMicrosecondLength() >= 2000000) {
            if (Player.audioClip.getMicrosecondLength() < 60000000) {
                Player.length[2] = Math.round(Player.audioClip.getMicrosecondPosition() / 1000000);
                Player.description[1] = "0:" + Integer.toString(Player.length[2]);
            } else {
                Player.length[2] = Math.round(Player.audioClip.getMicrosecondPosition() / 60000000);
                Player.length[3] = Math.round(Player.audioClip.getMicrosecondPosition() % 60000000) / 1000000;

                Player.description[1] = Integer.toString(Player.length[2]) + ":" + Integer.toString(Player.length[3]);
            }
            
            Player.description[1] += " / ";
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Player().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backwardButton;
    private javax.swing.JButton fileButton;
    private javax.swing.JFileChooser fileManager;
    private javax.swing.JButton forwardButton;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JLabel logo1Label;
    private javax.swing.JLabel logo2Label;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JButton playOrPauseButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JLabel warningLabel1;
    private javax.swing.JLabel warningLabel2;
    // End of variables declaration//GEN-END:variables
}
